name: Build and Release

on:
    release:
        types: [published]
    push:
        tags:
            - 120*
    workflow_dispatch:
        inputs:
            tag:
                description: "Tag or version number"
                required: true

env:
    PYTHON_VERSION: "3.9"

jobs:
    init-matrix:
        runs-on: ubuntu-latest
        outputs:
            matrix: ${{ steps.set-matrix.outputs.matrix }}
            count: ${{ steps.get-new-commits.outputs.count }}
            short_sha: ${{ steps.get-new-commits.outputs.short_sha }}
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Get new commits
              id: get-new-commits
              run: |
                  echo "count=$(git log --oneline --since '24 hours ago' | wc -l)" >> $GITHUB_OUTPUT
                  echo "short_sha=$(echo ${{ github.sha }} | cut -c1-8)" >> $GITHUB_OUTPUT

            - name: Set matrix
              id: set-matrix
              run: |
                  items=()

                  # https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners

                  items+=('{"build": "windows", "os": "windows-latest", "arch": "x86_64"}')

                  # win7, x86_64, python3.8
                  if [[ -n "${{ vars.BUILD_FOR_WINDOWS_LEGACY }}" ]]; then
                    items+=('{"build": "windows", "os": "windows-2019", "arch": "x86_64", "python": "3.8", "tail": "-legacy"}')
                  fi

                  # 合并items到json数组
                  matrix="matrix=["
                  for ((i=0; i<${#items[@]}; i++)); do
                    matrix+=" ${items[i]}"
                    if ((i != ${#items[@]}-1)); then
                      matrix+=","
                    fi
                  done
                  matrix+="]"

                  # 输出matrix到GITHUB_OUTPUT
                  echo $matrix >> $GITHUB_OUTPUT

    build-app:
        needs: init-matrix
        runs-on: ${{ matrix.os }}
        if: ${{ needs.init-matrix.outputs.count > 0 || github.event_name == 'workflow_dispatch' }}
        strategy:
            fail-fast: false
            matrix:
                include: ${{fromJson(needs.init-matrix.outputs.matrix)}}
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Python - cache pip
              if: ${{ matrix.cache != 'none' }}
              uses: actions/setup-python@v4
              with:
                  python-version: ${{ matrix.python || env.PYTHON_VERSION }}
                  cache: ${{ matrix.cache || 'pip' }}

            - name: Set up Python - no cache
              if: ${{ matrix.cache == 'none' }}
              uses: actions/setup-python@v4
              with:
                  python-version: ${{ matrix.python || env.PYTHON_VERSION }}

            - name: Install dependencies - Windows
              if: ${{ matrix.build == 'windows' }}
              run: |
                  python -m pip install --upgrade pip
                  pip install -r requirements.txt
                  pip install pyinstaller==5.8.0

            - name: Build Windows app - Windows
              if: ${{ matrix.build == 'windows' }}
              run: ./build-action
            - name: Create Release - Windows
              uses: svenstaro/upload-release-action@2.7.0
              if: ${{ matrix.build == 'windows' }}
              with:
                  overwrite: true
                  asset_name: ${{'MDCα'}}-${{ matrix.build }}-${{ matrix.arch }}${{ matrix.tail }}-$tag.exe
                  file: dist/MDCα.exe
                  prerelease: false
                  tag: ${{ github.event.inputs.tag }}
